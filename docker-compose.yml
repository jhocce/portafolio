services:
  # db_postgres:
  #   image: postgres:11.5
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  portafolio:
    restart: always
    container_name: portafolio
    build:  .
    volumes:
      - static:/code/static
      - .:/code
   
  nginx:
    image: nginx:1.13
    ports:
      - 8855:8855
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static:/code/static
    depends_on:
      - portafolio
volumes:
  .:
  # postgres_data:
  static:
  # mymarket:
  #   restart: always
  #   container_name: pruebas_container
  #   build: .
  #   command: python manage.py runserver 0.0.0.0:8000
  #   ports:
  #     - '8085:8000'
  #   expose:
  #     - 8000
      

# volumes:
#   app_media:
#   app_static:
#   postgres:

# services:
#   nginx:
#     container_name: nginx
#     restart: always
#     image: nginx:alpine
#     ports:
#       - "80:80"
#     depends_on:
#       - app
#     volumes:
#       - ./nginx/conf:/etc/nginx/conf.d
#       - app_media:/data/app/media
#       - app_static:/data/app/static

#   postgres:
#     container_name: postgres
#     restart: always
#     image: postgres:9.6-alpine
#     volumes:
#       - postgres:/var/lib/postgresql/data
#       - ./postgres/initdb:/docker-entrypoint-initdb.d
#     expose:
#       - "5432"

#   app:
#     container_name: app
#     environment:
#     - PYTHONUNBUFFERED=1
#     restart: always
#     build: ./code/
#     expose:
#       - "8000"
#     depends_on:
#       - postgres
#     volumes:
#       - app_media:/app/media
#       - app_static:/app/static
#       - ./app/conf:/conf
#     entrypoint: ""
#     command: /usr/bin/uwsgi --module=productos.wsgi:application --master --http=:8000 --processes=5 --max-requests=5000
  
#   data:
#     container_name: data
#     restart: always
#     image: alpine:3.7
#     volumes:
#       - app_media:/data/app/media
#       - app_static:/data/app/static
#       - postgres:/data/postgres
#     command: tail -F /dev/null

# # version: '3.8'

# services:
#   db: 
#     image: postgres
#     environment:
#       POSTGRES_DB: 'postgres_db'
#       POSTGRES_USER: 'db_user'
#       POSTGRES_PASSWORD: 'password'
#     restart: always

#   web:
#     container_name: prueba_web
#     build: .
#     command: python manage.py runserver
#     volumes:
#       - .:/code
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     expose:
#       - '8000'
   